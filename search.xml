<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java Used in LeetCode</title>
    <url>/2021/03/02/Java-Used-in-LeetCode/</url>
    <content><![CDATA[<p>记录在LeetCode上刷题过程中遇到的java基础知识</p>
 <a id="more"></a>

<h4 id="java数组"><a href="#java数组" class="headerlink" title="java数组"></a>java数组</h4><ul>
<li>如何初始化</li>
<li>循环操作</li>
<li>数组长度<br>length是数组的一个属性。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] intArray; <span class="comment">// 声明</span></span><br><span class="line"><span class="keyword">int</span>[] intArray2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>]; <span class="comment">//初始化，需要确定数组长度</span></span><br><span class="line"><span class="keyword">int</span> [] intArray2 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;; <span class="comment">// 声明初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span>[] nums)</span></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; nums.length&gt;;i++)&#123; </span><br><span class="line">        sum += nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>拷贝<br>下面的结果是在jshell=11.0.3版本<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int[] a &#x3D; new int[]&#123;1,2,3&#125;; &#x2F;&#x2F;a &#x3D;&#x3D;&gt; int[3] &#123; 1, 2, 3 &#125;</span><br><span class="line">int[] b &#x3D; a; &#x2F;&#x2F;b &#x3D;&#x3D;&gt; int[3] &#123; 1, 2, 3 &#125;</span><br><span class="line">b[0] &#x3D; 4;</span><br><span class="line">a;b; </span><br><span class="line">&#x2F;&#x2F; a&#x3D;&#x3D;&gt; int[3] &#123; 4, 2, 3 &#125; ; a&#x3D;&#x3D;&gt; int[3] &#123; 4, 2, 3 &#125;</span><br></pre></td></tr></table></figure>
上面的是浅拷贝<br>深度拷贝的简单思路是通过循环实现，在循环里面赋值，这样修改拷贝数组就不会影响原数组（针对对象的实现更加复杂，在这里先考虑基本类型的拷贝）。下面用字符串为例，调用<code>System.arraycopy</code>实现<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> String[] s1 = &#123;<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;banana&quot;</span>&#125;</span><br><span class="line"><span class="comment">// s1 ==&gt; String[2] &#123; &quot;apple&quot;, &quot;banana&quot; &#125;</span></span><br><span class="line"> String[] s2 = <span class="keyword">new</span> String[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//s2 ==&gt; String[4] &#123; null, null, null, null &#125;</span></span><br><span class="line"> System.arraycopy(s1,<span class="number">0</span>,s2,<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">// s2 ==&gt; String[4] &#123; &quot;apple&quot;, &quot;banana&quot;, null, null &#125;</span></span><br><span class="line"> s2[<span class="number">0</span>]=<span class="string">&quot;orange&quot;</span></span><br><span class="line"> s1;s2;</span><br><span class="line"><span class="comment">// s1 ==&gt; String[2] &#123; &quot;apple&quot;, &quot;banana&quot; &#125;</span></span><br><span class="line"><span class="comment">// s2 ==&gt; String[4] &#123; &quot;orange&quot;, &quot;banana&quot;, null, null &#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="java字符串"><a href="#java字符串" class="headerlink" title="java字符串"></a>java字符串</h4></li>
<li>长度<br><code>length()</code>是java String的方法</li>
<li>子串<br><code>substring(int beginIndex, int endIndex);</code>包括beginIndex, 不包括endIndex;</li>
<li>字符<br><code>charAt(int index)</code>取指定下标的字符<br>下标范围：<code>[0, length()-1]</code>, 两边都包括<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String st = <span class="string">&quot;apple&quot;</span></span><br><span class="line">st.length() <span class="comment">// 5</span></span><br><span class="line">st.charAt(<span class="number">0</span>) <span class="comment">// &#x27;a&#x27;</span></span><br><span class="line">st.substring(<span class="number">0</span>,<span class="number">3</span>) <span class="comment">// &quot;app&quot;</span></span><br></pre></td></tr></table></figure>


</li>
</ul>
<h4 id="java-HashMap"><a href="#java-HashMap" class="headerlink" title="java HashMap"></a>java HashMap</h4><ul>
<li>初始化</li>
<li>K,V取值</li>
<li>遍历<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap; <span class="comment">// 引入 HashMap 类</span></span><br><span class="line">HashMap&lt;Integer, String&gt; fruit = <span class="keyword">new</span> HashMap&lt;Integer, String&gt;();</span><br><span class="line">fruit.put(<span class="number">1</span>, <span class="string">&quot;apple&quot;</span>);</span><br><span class="line">fruit.put(<span class="number">2</span>, <span class="string">&quot;orange&quot;</span>);</span><br><span class="line">fruit.put(<span class="number">3</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line"><span class="comment">//  fruit ==&gt; &#123;1=apple, 2=orange, 3=banana&#125;</span></span><br><span class="line">fruit.put(<span class="number">3</span>, <span class="string">&quot;bus&quot;</span>);</span><br><span class="line"><span class="comment">// fruit ==&gt; &#123;1=apple, 2=orange, 3=bus&#125;</span></span><br><span class="line">fruit.replace(<span class="number">3</span>,<span class="string">&quot;bus&quot;</span>, <span class="string">&quot;banana&quot;</span>)</span><br><span class="line"><span class="comment">// fruit ==&gt; &#123;1=apple, 2=orange, 3=banana&#125;</span></span><br><span class="line">fruit.get(<span class="number">1</span>); <span class="comment">// &quot;apple&quot;</span></span><br><span class="line">fruit.containsKey(<span class="number">1</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">////  for each</span></span><br><span class="line"><span class="keyword">for</span> (Integer i : fruit.keySet()) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;key: &quot;</span> + i + <span class="string">&quot; value: &quot;</span> + fruit.get(i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 1-5 </title>
    <url>/2021/03/02/LeetCode-1-5/</url>
    <content><![CDATA[<p>LeetCode 1-5题的算法记录<br>最长回文子串，寻找两个正序数组的中位数，无重复字符的最长子串，两数相加，两数之和<br> <a id="more"></a></p>
<h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><p>java 1.8.0<br>java基础知识（数组）和Collections</p>
<h3 id="总结与收获"><a href="#总结与收获" class="headerlink" title="总结与收获"></a>总结与收获</h3><ul>
<li><p>java的基础知识<br>java中的基础知识，主要是指数组操作（创建数组，复制数组等），集合操作（HashMap的初始化和查找），循环操作<br>基础的数据结构是数组，主要要掌握的数组的循环操作。</p>
</li>
<li><p>双指针方法解决部分问题<br>今天的题目基本上都可以找到$O(n^2)$的暴力法解决，这类问题的主要方法就是通过两个指针的移动来完成条件的查找，也是其他的解决问题的基础。</p>
</li>
</ul>
<h3 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1.两数之和"></a>1.两数之和</h3><p><a href="https://leetcode-cn.com/problems/two-sum/">LeetCode 题目描述</a></p>
<h4 id="暴力法-双指针"><a href="#暴力法-双指针" class="headerlink" title="暴力法,双指针"></a>暴力法,双指针</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">int</span>[] result_index = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">boolean</span> succeed = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// O(n^2)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length &amp;&amp; !succeed;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;nums.length &amp;&amp; !succeed; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] + nums[j] == target)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i != j)&#123;</span><br><span class="line">                        succeed = <span class="keyword">true</span>;</span><br><span class="line">                        result_index[<span class="number">0</span>] = i&gt;j?j:i;</span><br><span class="line">                        result_index[<span class="number">1</span>] = i&gt;j?i:j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result_index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="HashMap方法"><a href="#HashMap方法" class="headerlink" title="HashMap方法"></a>HashMap方法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] result_index = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="comment">// hash</span></span><br><span class="line">        Map&lt;Integer, Integer&gt; htmp = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="comment">// init map</span></span><br><span class="line">        <span class="comment">// k: nums[i], v: i, index of target-nums[i] in nums;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(htmp.containsKey( target-nums[i]))&#123;</span><br><span class="line">                result_index[<span class="number">0</span>] = htmp.get(target-nums[i]);</span><br><span class="line">                result_index[<span class="number">1</span>] = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            htmp.put(nums[i], i); <span class="comment">// put here to prevent resue the i</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result_index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-两数相加"><a href="#2-两数相加" class="headerlink" title="2.两数相加"></a>2.两数相加</h3><p><a href="https://leetcode-cn.com/problems/add-two-numbers/">[LeetCode 题目描述]</a><br>细节问题，尤其是链表的操作（头插法和尾插法）</p>
<h4 id="按位计算-短的补0"><a href="#按位计算-短的补0" class="headerlink" title="按位计算, 短的补0"></a>按位计算, 短的补0</h4><p> 参考<a href="https://leetcode-cn.com/problems/add-two-numbers/solution/2-liang-shu-xiang-jia-javamo-ni-by-maczh-7wpr/"></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ListNode res = <span class="keyword">null</span>;</span><br><span class="line">        ListNode head = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 尾插法</span></span><br><span class="line">        <span class="keyword">int</span> cap = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l1 != <span class="keyword">null</span> || l2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> l1_val = l1!=<span class="keyword">null</span> ?  l1.val : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> l2_val = l2!=<span class="keyword">null</span> ?  l2.val : <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">            sum = l1_val+l2_val+cap;</span><br><span class="line">            cap = sum/<span class="number">10</span>;</span><br><span class="line">            ListNode t = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">if</span>(res == <span class="keyword">null</span>)&#123;</span><br><span class="line">                res = t;</span><br><span class="line">                head = t;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                res.next = t;</span><br><span class="line">                res = res.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(l1!=<span class="keyword">null</span>)&#123; l1=l1.next;&#125;</span><br><span class="line">            <span class="keyword">if</span>(l2!=<span class="keyword">null</span>)&#123; l2=l2.next;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// cap</span></span><br><span class="line">        <span class="keyword">if</span>(cap != <span class="number">0</span>)&#123;</span><br><span class="line">            res.next =  <span class="keyword">new</span> ListNode(cap);</span><br><span class="line">            res = res.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-无重复字符的最长子串"><a href="#3-无重复字符的最长子串" class="headerlink" title="3.无重复字符的最长子串"></a>3.无重复字符的最长子串</h3><p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/description/">[LeetCode 题目描述]</a><br>细节问题，尤其是链表的操作（头插法和尾插法）</p>
<h4 id="暴力，双指针"><a href="#暴力，双指针" class="headerlink" title="暴力，双指针"></a>暴力，双指针</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">int</span> maxSubStringLength=<span class="number">0</span>;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;s.length(); j++)&#123;</span><br><span class="line">                <span class="comment">// check if has repeat char</span></span><br><span class="line">                <span class="keyword">if</span>( hasRepeatChar(s,i,j))&#123;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                maxSubStringLength = j-i+<span class="number">1</span> &gt; maxSubStringLength ?</span><br><span class="line">                                     j-i+<span class="number">1</span>: maxSubStringLength;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxSubStringLength;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasRepeatChar</span><span class="params">(String s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="comment">// include start and end</span></span><br><span class="line">        <span class="keyword">boolean</span>[] check_char_flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">128</span>];</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=start;i&lt;=end;i++)&#123;</span><br><span class="line">            c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (check_char_flag[c]==<span class="keyword">true</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            check_char_flag[c] = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="4-寻找两个正序数组的中位数"><a href="#4-寻找两个正序数组的中位数" class="headerlink" title="4.寻找两个正序数组的中位数"></a>4.寻找两个正序数组的中位数</h3><p><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/description/">LeetCode 题目描述</a><br>对比了官网给的算法（提前结束）发现没有明显的性能提升，所以这里就完整采用两步的方法来操作，不采用取前第k小的值的算法来提前结束算法。</p>
<h4 id="暴力-先合并-然后计算中位数"><a href="#暴力-先合并-然后计算中位数" class="headerlink" title="暴力, 先合并 然后计算中位数"></a>暴力, 先合并 然后计算中位数</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// merge</span></span><br><span class="line">        <span class="keyword">int</span> [] merge_nums = <span class="keyword">new</span> <span class="keyword">int</span>[nums1.length+nums2.length]; </span><br><span class="line">        <span class="keyword">int</span> merge_length = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums1.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> findMedianSortedArrays(nums2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nums2.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> findMedianSortedArrays(nums1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;nums1.length &amp;&amp; j&lt;nums2.length )&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums1[i] &lt; nums2[j])&#123; </span><br><span class="line">                merge_nums[merge_length]=nums1[i]; </span><br><span class="line">                merge_length++;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                merge_nums[merge_length]=nums2[j]; </span><br><span class="line">                merge_length++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;nums1.length)&#123;merge_nums[merge_length] = nums1[i]; merge_length++;i++;&#125;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;nums2.length)&#123;merge_nums[merge_length] = nums2[j]; merge_length++;j++;&#125;</span><br><span class="line">        <span class="keyword">return</span> findMedianSortedArrays(merge_nums);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="keyword">int</span>[] nums1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums1.length%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> (nums1[(nums1.length/<span class="number">2</span>)-<span class="number">1</span>] + nums1[nums1.length/<span class="number">2</span>]) * <span class="number">0.5</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> nums1[nums1.length/<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-最长回文子串"><a href="#5-最长回文子串" class="headerlink" title="5.最长回文子串"></a>5.最长回文子串</h3><p><a href="https://leetcode-cn.com/problems/longest-palindromic-substring/description/">LeetCode 题目描述</a></p>
<h4 id="暴力，双指针-1"><a href="#暴力，双指针-1" class="headerlink" title="暴力，双指针"></a>暴力，双指针</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> beginIndex=<span class="number">0</span>,endIndex=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">           </span><br><span class="line">            <span class="keyword">for</span>( <span class="keyword">int</span> j = i + endIndex-beginIndex; j&lt;s.length(); j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(checkPalindromeSubString(s,i,j))&#123;</span><br><span class="line">                    <span class="keyword">if</span>( j-i &gt; endIndex-beginIndex)&#123;</span><br><span class="line">                        beginIndex=i;endIndex=j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">return</span> s.substring(beginIndex,endIndex+<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPalindromeSubString</span><span class="params">(String s, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123; </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> lc = s.charAt(i);</span><br><span class="line">        <span class="keyword">char</span> rc = s.charAt(j);</span><br><span class="line">        <span class="keyword">while</span>(lc == rc)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">            <span class="keyword">if</span> (i&gt;=j)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lc = s.charAt(i);</span><br><span class="line">            rc = s.charAt(j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="中心扩展"><a href="#中心扩展" class="headerlink" title="中心扩展"></a>中心扩展</h4><p>参考 <a href="https://leetcode-cn.com/problems/longest-palindromic-substring/solution/zui-chang-hui-wen-zi-chuan-by-leetcode-solution/">LeetCode 官方题解</a><br><a href="https://github.com/labuladong/fucking-algorithm/blob/master/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.md">labuladong github</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        String res = s.substring(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">           String st = palindrome(s, i, i);</span><br><span class="line">           <span class="keyword">if</span>(st.length() &gt; res.length())&#123;</span><br><span class="line">               res = st;</span><br><span class="line">           &#125;</span><br><span class="line">           st = palindrome(s, i, i+<span class="number">1</span>);</span><br><span class="line">           <span class="keyword">if</span> (st.length() &gt; res.length())&#123;</span><br><span class="line">               res = st;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">palindrome</span><span class="params">(String s, <span class="keyword">int</span> beginIndex, <span class="keyword">int</span> endIndex)</span></span>&#123;</span><br><span class="line">        <span class="comment">// middle expand</span></span><br><span class="line">        <span class="keyword">while</span>( beginIndex&gt;=<span class="number">0</span> &amp;&amp; endIndex &lt; s.length() &amp;&amp; s.charAt(beginIndex) == s.charAt(endIndex))&#123;</span><br><span class="line">            beginIndex--; endIndex++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substring(beginIndex+<span class="number">1</span>, endIndex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/18/hello-world/</url>
    <content><![CDATA[<p>Hello word for Hexo.</p>
<a id="more"></a>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo和GitHub Pages 搭建个人博客</title>
    <url>/2020/08/18/hexo-github-blog/</url>
    <content><![CDATA[<p>在github上搭建博客的过程的记录。</p>
 <a id="more"></a>



<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><ul>
<li>git<br>官网：<a href="https://git-scm.com/">https://git-scm.com/</a></li>
<li>node<br>官网：<a href="http://nodejs.cn/">http://nodejs.cn/</a><br>下载的方法见官网链接，在此就不多说了。其中git可以选择github客户端等而不是命令行。<br>建议通过镜像网站下载软件，否则下载速度非常慢，可以考虑<a href="https://npm.taobao.org/mirrors/">淘宝镜像</a>。<br>系统：windows 10</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><p>注册github账号<br>因为使用github提供的 GitHub Pages 服务，所以需要先注册github账号，如果已有可以跳过这部分内容，<br>如果没有账号的话，可以通过邮箱在github官网上注册账号。</p>
</li>
<li><p>配置github SSH key<br>使用的hexo是通过git来将文件传递到github仓库中的，为了避免每次提交的时候都要验证身份（输入邮箱密码），通过配置sshkey来偷懒，非必须。具体步骤如下：<br> 2.1 生成key<br> 运行命令 ssh-keygen, （git安装后自带的程序）,全部默认，会在用户目录的.ssh目录（隐藏文件夹）下生成 id_rsa, id_rsa.pub文件，<br> 打开id_rsa.pub就是后面需要的key<br> 2.2 保存到github账户中<br> 登录github账号，选择：setting –&gt; SSH and GPG keys，选择”new ssh key”，然后将id_rsa.pub的内容复制到“key”文本框中，保存。</p>
</li>
<li><p>GitHub Pages使用<br> 将GitHub Pages作为一个静态网站托管平台，能够方便别人的访问，同时利用git来管理自己的博客内容。<br> 3.1 创建仓库<br> 创建 github公开仓库，仓库名称为 <code>&lt;用户名&gt;.github.io</code>，选择带有Readme.md<br> 3.2 打开GitHub Pages服务<br> 在浏览器中打开建立的仓库，选择仓库的setting –&gt; options，然后选择 GitHub Pages，（这里 GitHub Pages在页面的底部，不是另一个页面），选择branch为master，保存。当提示<code>Your site is published at ...</code> 时说明成功。打开上面的链接，就能够看到Readme.md的相关内容。<br> 3.3 使用<br> 到这里，就利用GitHub Pages建立了一个静态网页，我们可以通过在这个仓库中手动增加静态网页的方式来完成内容的展示，但是非常麻烦，所以下面介绍Hexo这一博客框架来简化操作。</p>
</li>
<li><p>Hexo使用<br> Hexo的官网是<a href="https://hexo.io/zh-cn/index.html">hexo.io</a>，是一个博客框架。主要特点是插件丰富，功能足够。主要用到的功能有： 自动部署，在本地写Markdown文件，然后通过简单的一行命令就能够转换为html文件并且部署到githubpages中。之后再结合相关的设置和插件来修改界面外观等。<br> 4.1 安装<br> 建议使用镜像网站，比如：<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝镜像</a></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
<p> 4.2 使用<br> hexo常用命令有：<code>generate, deploy, server, new</code>等，可以参考官网来找到更多的命令。</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd your_project # 进入一个空文件夹，作为项目的根目录</span><br><span class="line">hexo init #初始化，生成模板文件和代码</span><br><span class="line">npm install # 安装依赖的包</span><br></pre></td></tr></table></figure>
<p> 上面就建立成功了一个博客网站的demo，可以通过<code>hexo g</code>, <code>hexo s</code>,在本地部署来看一下网站的效果。</p>
<p> 4.3 写博客<br> 每次写博客并且生成静态网页的命令如下：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd your_project</span><br><span class="line">hexo new &quot;this blog name&quot;</span><br><span class="line">hexo g # 生成</span><br></pre></td></tr></table></figure>

<p> 4.4 部署<br> 上面完成了本地的部署，下面的任务就是将这个部署改为在GitHub Pages上部署。<br> 安装部署的工具包<code>hexo-deployer-git</code></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd you_project</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p> 修改hexo配置，将部署改为git。将<code>&lt;you_project&gt;/_config.yml</code>文件最后的内容参考如下内容修改：</p>
 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: &lt;repository url&gt; #git@github.com:chenruyi/chenruyi.github.io.git</span><br><span class="line">  branch: [branch] #master</span><br></pre></td></tr></table></figure>
<p> 每次写完博客之后，通过<code>hexo clean</code>,<code>hexo deploy</code>命令来更新并部署内容。</p>
</li>
</ol>
<ol start="5">
<li>继续美化<br> 现在的博客已经完成了主要的部分，还可以继续美化。。。。。</li>
</ol>
<ol start="6">
<li>下面记录一些常见到修改和配置（不定期更新）</li>
</ol>
<ul>
<li>设置首页不显示全文，只显示摘要<br>  采用的方法是使用<code> &lt;!-- more --&gt;</code>标签，在<code>---</code>（后一个）和<code> &lt;!-- more --&gt;</code>之间的内容是摘要，在首页上显示，并且自动添加<code>Read More</code>跳转到博客内容页面，注意的是这部分摘要在这篇blog中也会出现。<br>  使用方法：正常写blog中的内容，并且在开头增加一个摘要部分。</li>
</ul>
]]></content>
      <tags>
        <tag>git</tag>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>java-base-20-11-04</title>
    <url>/2020/11/04/java-base-20-11-04/</url>
    <content><![CDATA[<p>java 的基础知识，java的输入输出的操作</p>
<a id="more"></a>

<h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><p>在这里，主要是指命令行的输入和输出的处理，包括：1. 输入参数 2. 命令行处理程序<br>参考：<br><a href="https://www.runoob.com/java/java-files-io.html">菜鸟教程</a><br><a href="https://www.runoob.com/java/java-scanner-class.html">菜鸟教程</a></p>
<h3 id="输入参数处理"><a href="#输入参数处理" class="headerlink" title="输入参数处理"></a>输入参数处理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(String arg: args)&#123;</span><br><span class="line">        System.out.println(arg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如上所示，针对所有的输入参数可以按照这种方法来依次读入然后处理。</p>
<h3 id="命令行输入"><a href="#命令行输入" class="headerlink" title="命令行输入"></a>命令行输入</h3><p>在命令行中输入的处理是比较麻烦的，主要的采用<code>BufferedReader, Scanner</code>两个类来读入输入的字符然后处理。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="comment">// 使用 System.in 创建 BufferedReader</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="comment">// 输出提示信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输入字符, 按下 &#x27;q&#x27; 键退出。&quot;</span>);</span><br><span class="line">        <span class="comment">// 循环读取，直到输入&#x27;q&#x27;</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            c = (<span class="keyword">char</span>) br.read();</span><br><span class="line">            System.out.println(c);</span><br><span class="line">        &#125; <span class="keyword">while</span> (c != <span class="string">&#x27;q&#x27;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>上面的程序会一直读取输入然后输出</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> (scan.hasNextDouble()) &#123;</span><br><span class="line">        <span class="keyword">double</span> x = scan.nextDouble();</span><br><span class="line">        m = m + <span class="number">1</span>;</span><br><span class="line">        sum = sum + x;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    System.out.println(m + <span class="string">&quot;个数的和为&quot;</span> + sum);</span><br><span class="line">    System.out.println(m + <span class="string">&quot;个数的平均值是&quot;</span> + (sum / m));</span><br><span class="line">    scan.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>建议采用第二种方法，采用<code>Scanner</code>类来完成输入和输出的处理，一方面是Scanner类提供了一些类型转换的方法，比如上面所示的<code>nextDouble</code>能够将输入转换为指定类型。当然实际上java的命令行的输入还是比较少的。</p>
<h3 id="命令行处理程序"><a href="#命令行处理程序" class="headerlink" title="命令行处理程序"></a>命令行处理程序</h3><p>以ls为例，在java中如何实现这个功能（部分实现）。</p>
<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>文本文件的读写操作，常见的几种读写方法。</p>
<h3 id="文件读"><a href="#文件读" class="headerlink" title="文件读"></a>文件读</h3><h3 id="文件写"><a href="#文件写" class="headerlink" title="文件写"></a>文件写</h3>]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>jitsi-meeting视频会议简单部署记录</title>
    <url>/2020/09/27/jitsi-meeting-install/</url>
    <content><![CDATA[<p>jitsi-meeting视频会议的服务器端的部署记录</p>
<a id="more"></a>

<h2 id="jitsi-meeting视频会议部署"><a href="#jitsi-meeting视频会议部署" class="headerlink" title="jitsi-meeting视频会议部署"></a>jitsi-meeting视频会议部署</h2><p>最近看到了jitsi-meeting视频会议的开源软件，提供了web的测试链接，试了一下，功能比较齐全，所以想尝试一下部署到自己的服务器上。搜到了几篇博客，但是部分的内容已经过时了，修改的配置文件的位置都发生了改变，部署过程中遇到了不少坑，所以记录下来。</p>
<h3 id="jitsi-meeting介绍"><a href="#jitsi-meeting介绍" class="headerlink" title="jitsi-meeting介绍"></a>jitsi-meeting介绍</h3><p>jitsi-meeting是一个开源 （Apache） WebRTC JavaScript 应用程序，它使用<a href="https://github.com/jitsi/jitsi-videobridge">jitsi-videobridge</a>提供高质量、安全和可扩展的视频会议。<br>jitsi-meeting 前端可以在浏览器中运行，无需在额外安装。官网测试地址：<a href="https://meet.jit.si/">https://meet.jit.si</a>。jitsi-meeting支持共享屏幕和窗口等操作。并且提供了安卓和ios的测试客户端。<br>详细介绍可以参考：<br>官网: <a href="https://jitsi.org/">https://jitsi.org/</a><br>github: <a href="https://github.com/jitsi/jitsi-meet">https://github.com/jitsi/jitsi-meet</a></p>
<p>官网上提供了3种安装方法，包括基于 Debian 的系统(Ubuntun)包管理器（apt）安装，Docker安装和源码安装，为了简单起见，在这里先进行apt安装，其他的方法等之后有时间再尝试。<br>官方提供部署和安装方法见：<a href="https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-quickstart">jitsi.github.io</a>，主要的安装配置说明都是从这里复制得到的。</p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul>
<li>Ubuntun 16.04 服务器<br>在这里我使用的是阿里云服务器，也可以使用其他的云服务器，主要需要的条件是：公网ip，这样才能使用公网的ip来进入会议，如果没有只能在局域网内容进行测试。并且需要管理员权限。</li>
</ul>
<p>使用了阿里云服务器之后要开启相关的端口的访问权限，注意的是这是需要在阿里云的安全组规则管理界面进行设置的（在浏览器中）。需要开放的端口是：<code>80/tcp,443/tcp,4443/tcp,10000/udp</code>配置截图：</p>
<p><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_18-11-31.png" alt="80,443,4443,10000"></p>
<h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><p>下面的安装过程一般都是需要管理员权限的，使用<code>root</code>用户或者在命令前增加<code>sudo</code>命令。</p>
<ol>
<li><p>安装nginx</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y nginx</span><br></pre></td></tr></table></figure>
<p>检查nginx的情况<br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeeting-Snipaste_2020-09-27_15-31-04.png" alt="nginx成功启动"></p>
</li>
<li><p>防火墙配置<br>使用<code>ufw</code>管理防火墙。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 80/tcp</span><br><span class="line">sudo ufw allow 443/tcp</span><br><span class="line">sudo ufw allow 4443/tcp</span><br><span class="line">sudo ufw allow 10000/udp</span><br><span class="line">sudo ufw allow 22/tcp</span><br><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure>
<p>配置成功检查命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ufw status verbose</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeeting-Snipaste_2020-09-27_15-36-57.png" alt="配置结果"></p>
</li>
<li><p>安装jitsi-meeting<br>使用apt安装已经打包好的文件，主要的步骤是增加jitsimeeting的源，然后安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://download.jitsi.org/jitsi-key.gpg.key | sudo sh -c &#x27;gpg --dearmor &gt; /usr/share/keyrings/jitsi-keyring.gpg&#x27;</span><br><span class="line">echo &#x27;deb [signed-by=/usr/share/keyrings/jitsi-keyring.gpg] https://download.jitsi.org stable/&#x27; | sudo tee /etc/apt/sources.list.d/jitsi-stable.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> update all package sources</span></span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeeting-Snipaste_2020-09-27_15-52-20.png" alt="apt update中显示有jitsimeeting源"><br>开始安装jitsimeeting，注意的是网络比较慢，中间经过多次的中断和重试，最后下载完成依赖并且等待输入<code>y</code>确认安装，输入公网ip地址然后等待完成。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install jitsi-meet</span><br></pre></td></tr></table></figure>
<p>注意：<br>安装过程中需要输入服务器的地址可以是ip或者是域名等，在这里我用的是ip地址，在后续踩坑过程中没有找到修改ip地址的配置文件，所以输入的时候需要注意。<br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeeting-Snipaste_2020-09-27_16-03-52.png" alt="安装过程1"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-05-39.png" alt="输入ip"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-06-22.png" alt="ssl验证"></p>
</li>
<li><p>修改配置文件<br>配置文件的修改原理主要是配置nginx。<br>官方的部署指南中说是自动配置的，但是我按照上面的步骤安装完成之后没有成功（访问ip之后没有进入会议界面），所以进行下面的修改，如果成功了可能不需要下面的配置。<br>检查出错的原因：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 列出全部的jitmeeting启动的service</span></span><br><span class="line">systemctl | grep ji</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查状态</span></span><br><span class="line">systemctl status jitsi-videobridge2.service</span><br><span class="line">systemctl status jicofo.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> nginx状态</span></span><br><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure>
<p>结果如下所示：<br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-19-27.png"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-25-07.png"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-25-35.png"></p>
</li>
</ol>
<p>从nginx的报错信息得到出错的原因是：安装的nginx不支持TLSv1.3，配置文件<code>/etc/nginx/sites-enabled/47.103.0.122.conf</code>有问题。<br>修改如下：<br>将<code>/etc/nginx/sites-enabled/47.103.0.122.conf</code>中的<code>ssl_protocols</code>的值修改为 <code>TLSv1.1和TLSv1.2</code><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-39-56.png" alt="配置文件修改"><br>然后重启nginx得到成功结果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop nginx.service</span><br><span class="line">sudo systemctl start nginx.service</span><br><span class="line">sudo systemctl status nginx.service</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-47-50.png" alt="nginx启动成功"><br>通过浏览器访问<br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-57-02.png" alt="Firefox提示安全问题"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_16-58-56.png" alt="Chrome提示安全问题"><br>选择高级，同意风险并且继续（继续前往不安全的链接）可以进入首页。<br>可以创建会议并且其他的人也能够通过ip地址来加入会议，到这里部署就算成功了。</p>
<p>成功运行的测试截图：<br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_17-01-26.png" alt="首页"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_17-02-22.png" alt="会议界面（关闭摄像头）"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_17-44-28.png" alt="分享窗口"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_17-45-09.png" alt="设置密码"><br><img src="https://gitee.com/chenryi/image_for_notes/raw/master/jitsimeetingSnipaste_2020-09-27_17-46-00.png" alt="分享链接"></p>
<p>其中关于安全问题的提示可以考虑参考<a href="https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-quickstart#generate-a-lets-encrypt-certificate-optional-recommended">generate-a-lets-encrypt-certificate-optional-recommended</a>来解决。</p>
<p>另外，如果没有找到相关的配置文件，可以通过复制<code>/usr/share/jitsi-meet-web-config/jitsi-meet.example</code>到<code>/etc/nginx/conf.d/jitsi-meet-ip.conf</code>，并修改配置文件的内容来完成。<br>修改内容：</p>
<ul>
<li>修改<code>ssl_protocols</code>的值为 <code>TLSv1.1和TLSv1.2</code></li>
<li>将配置文件中出现的<code>jitsi-meet.example.com</code>修改为ip地址，下面以<code>111.111.111.111</code>为例，包括<code>ssl_certificate，ssl_certificate_key</code>的值。</li>
</ul>
<p>完整的修改结果如下所示。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server_names_hash_bucket_size 64;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name 111.111.111.111;</span><br><span class="line"></span><br><span class="line">    location ^~ &#x2F;.well-known&#x2F;acme-challenge&#x2F; &#123;</span><br><span class="line">       default_type &quot;text&#x2F;plain&quot;;</span><br><span class="line">       root         &#x2F;usr&#x2F;share&#x2F;jitsi-meet;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x3D; &#x2F;.well-known&#x2F;acme-challenge&#x2F; &#123;</span><br><span class="line">       return 404;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">       return 301 https:&#x2F;&#x2F;$host$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line">    server_name 111.111.111.111;</span><br><span class="line"></span><br><span class="line"># Mozilla Guideline v5.4, nginx 1.17.7, OpenSSL 1.1.1d, intermediate configuration</span><br><span class="line">    ssl_protocols TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line">    ssl_prefer_server_ciphers off;</span><br><span class="line"></span><br><span class="line">    ssl_session_timeout 1d;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;  # about 40000 sessions</span><br><span class="line">    ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age&#x3D;63072000&quot; always;</span><br><span class="line"></span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;prosody&#x2F;certs&#x2F;111.111.111.111.crt;</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;prosody&#x2F;certs&#x2F;111.111.111.111.key;</span><br><span class="line"></span><br><span class="line">    root &#x2F;usr&#x2F;share&#x2F;jitsi-meet;</span><br><span class="line"></span><br><span class="line">    # ssi on with javascript for multidomain variables in config.js</span><br><span class="line">    ssi on;</span><br><span class="line">    ssi_types application&#x2F;x-javascript application&#x2F;javascript;</span><br><span class="line"></span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    error_page 404 &#x2F;static&#x2F;404.html;</span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_types text&#x2F;plain text&#x2F;css application&#x2F;javascript application&#x2F;json image&#x2F;x-icon application&#x2F;octet-stream application&#x2F;wasm;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied no-cache no-store private expired auth;</span><br><span class="line">    gzip_min_length 512;</span><br><span class="line"></span><br><span class="line">    location &#x3D; &#x2F;config.js &#123;</span><br><span class="line">        alias &#x2F;etc&#x2F;jitsi&#x2F;meet&#x2F;111.111.111.111-config.js;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location &#x3D; &#x2F;external_api.js &#123;</span><br><span class="line">        alias &#x2F;usr&#x2F;share&#x2F;jitsi-meet&#x2F;libs&#x2F;external_api.min.js;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #ensure all static content can always be found first</span><br><span class="line">    location ~ ^&#x2F;(libs|css|static|images|fonts|lang|sounds|connection_optimization|.well-known)&#x2F;(.*)$</span><br><span class="line">    &#123;</span><br><span class="line">        add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;</span><br><span class="line">        alias &#x2F;usr&#x2F;share&#x2F;jitsi-meet&#x2F;$1&#x2F;$2;</span><br><span class="line"></span><br><span class="line">        # cache all versioned files</span><br><span class="line">        if ($arg_v) &#123;</span><br><span class="line">          expires 1y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # BOSH</span><br><span class="line">    location &#x3D; &#x2F;http-bind &#123;</span><br><span class="line">        proxy_pass      http:&#x2F;&#x2F;localhost:5280&#x2F;http-bind;</span><br><span class="line">        proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # xmpp websockets</span><br><span class="line">    location &#x3D; &#x2F;xmpp-websocket &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:5280&#x2F;xmpp-websocket?prefix&#x3D;$prefix&amp;$args;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        tcp_nodelay on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^&#x2F;([^&#x2F;?&amp;:&#39;&quot;]+)$ &#123;</span><br><span class="line">        try_files $uri @root_path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location @root_path &#123;</span><br><span class="line">        rewrite ^&#x2F;(.*)$ &#x2F; break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^&#x2F;([^&#x2F;?&amp;:&#39;&quot;]+)&#x2F;config.js$</span><br><span class="line">    &#123;</span><br><span class="line">       set $subdomain &quot;$1.&quot;;</span><br><span class="line">       set $subdir &quot;$1&#x2F;&quot;;</span><br><span class="line"></span><br><span class="line">       alias &#x2F;etc&#x2F;jitsi&#x2F;meet&#x2F;111.111.111.111-config.js;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #Anything that didn&#39;t match above, and isn&#39;t a real file, assume it&#39;s a room name and redirect to &#x2F;</span><br><span class="line">    location ~ ^&#x2F;([^&#x2F;?&amp;:&#39;&quot;]+)&#x2F;(.*)$ &#123;</span><br><span class="line">        set $subdomain &quot;$1.&quot;;</span><br><span class="line">        set $subdir &quot;$1&#x2F;&quot;;</span><br><span class="line">        rewrite ^&#x2F;([^&#x2F;?&amp;:&#39;&quot;]+)&#x2F;(.*)$ &#x2F;$2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # BOSH for subdomains</span><br><span class="line">    location ~ ^&#x2F;([^&#x2F;?&amp;:&#39;&quot;]+)&#x2F;http-bind &#123;</span><br><span class="line">        set $subdomain &quot;$1.&quot;;</span><br><span class="line">        set $subdir &quot;$1&#x2F;&quot;;</span><br><span class="line">        set $prefix &quot;$1&quot;;</span><br><span class="line"></span><br><span class="line">        rewrite ^&#x2F;(.*)$ &#x2F;http-bind;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # websockets for subdomains</span><br><span class="line">    location ~ ^&#x2F;([^&#x2F;?&amp;:&#39;&quot;]+)&#x2F;xmpp-websocket &#123;</span><br><span class="line">        set $subdomain &quot;$1.&quot;;</span><br><span class="line">        set $subdir &quot;$1&#x2F;&quot;;</span><br><span class="line">        set $prefix &quot;$1&quot;;</span><br><span class="line"></span><br><span class="line">        rewrite ^&#x2F;(.*)$ &#x2F;xmpp-websocket;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h3><ol>
<li>完全卸载jitsi-meeting<br>因为中间出现过问题，考虑过卸载重装，尝试过一次，但是之后安装过程中没有出现输入ip的界面，而且没有自动完成配置文件，所以尝试来全部删除，然后按照上面的方法来完成部署。<br>jitsi-meeting的卸载<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge jigasi jitsi-meet jitsi-meet-web-config jitsi-meet-prosody jitsi-meet-turnserver jitsi-meet-web jicofo jitsi-videobridge jitsi-videobridge2 prosody nginx</span><br><span class="line"></span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure>
删除全部文件的方法：使用<code>find \ -name jitsi*</code>来查找全部的文件，然后删除。</li>
</ol>
<ol start="2">
<li><p>nginx启动失败<br>检查是否是nginx和video-bridge使用的端口的冲突问题，video-bridge先检查443端口，如果被占用则使用4443端口，所以正常启动需要先启动nginx，然后再启动video-bridge，如果是端口占用的问题，先关闭然后再按照顺序启动就可以来。</p>
</li>
<li><p>配置文件找不到</p>
</li>
</ol>
<p>可以通过复制<code>/usr/share/jitsi-meet-web-config/jitsi-meet.example</code>到<code>/etc/nginx/conf.d/jitsi-meet-ip.conf</code>，并修改配置文件的内容来完成。<br>修改内容：</p>
<ul>
<li>修改<code>ssl_protocols</code>的值为 <code>TLSv1.1和TLSv1.2</code></li>
<li>将配置文件中出现的<code>jitsi-meet.example.com</code>修改为ip地址，下面以<code>111.111.111.111</code>为例，包括<code>ssl_certificate，ssl_certificate_key</code>的值。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>记录librosa 安装的一个问题</title>
    <url>/2020/08/30/librosa0-7-numba0-50-error/</url>
    <content><![CDATA[<p>librosa和numba冲突导致到安装问题和和解决办法。</p>
 <a id="more"></a>


<h2 id="librosa-使用了numba中修改的一个接口"><a href="#librosa-使用了numba中修改的一个接口" class="headerlink" title="librosa 使用了numba中修改的一个接口"></a>librosa 使用了numba中修改的一个接口</h2><h3 id="具体的问题："><a href="#具体的问题：" class="headerlink" title="具体的问题："></a>具体的问题：</h3><p>librosa 安装中出现依赖性错误。numba更改了接口，但是librosa没有限制使用指定版本的numba，导致安装了新版的numba。</p>
<h4 id="出现问题版本记录："><a href="#出现问题版本记录：" class="headerlink" title="出现问题版本记录："></a>出现问题版本记录：</h4><p>librosa == 0.60<br>numba == 0.50.1</p>
<p>在命令行中使用下面的命令：<code>python -c &quot;import librosa&quot;</code><br>出现下面报错信息：</p>
<p><img src="https://gitee.com/chenryi/image_for_notes/raw/master/librosa-numba-fixed.png" alt="报错信息"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">  File &quot;C:\Users\chenr\Anaconda3\lib\site-packages\librosa\__init__.py&quot;, line 12, in &lt;module&gt;</span><br><span class="line">    from . import core</span><br><span class="line">  File &quot;C:\Users\chenr\Anaconda3\lib\site-packages\librosa\core\__init__.py&quot;, line 109, in &lt;module&gt;</span><br><span class="line">    from .time_frequency import *  # pylint: disable&#x3D;wildcard-import</span><br><span class="line">  File &quot;C:\Users\chenr\Anaconda3\lib\site-packages\librosa\core\time_frequency.py&quot;, line 10, in &lt;module&gt;</span><br><span class="line">    from ..util.exceptions import ParameterError</span><br><span class="line">  File &quot;C:\Users\chenr\Anaconda3\lib\site-packages\librosa\util\__init__.py&quot;, line 71, in &lt;module&gt;</span><br><span class="line">    from . import decorators</span><br><span class="line">    from . import decorators</span><br><span class="line">  File &quot;C:\Users\chenr\Anaconda3\lib\site-packages\librosa\util\decorators.py&quot;, line 9, in &lt;module&gt;</span><br><span class="line">    from numba.decorators import jit as optional_jit</span><br><span class="line">ModuleNotFoundError: No module named &#39;numba.decorators&#39;</span><br></pre></td></tr></table></figure>
<h3 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h3><p>numba在0.49版本之后改变了接口，而librosa包没有严格限制numba的版本号</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在github中有人已经提出这个问题，并且已经做出了修改，应该在librosa的0.8.0中改正了这个问题（没有测试）。<code>decorators.py</code>在0.8.0版本中删除了<code>optional_jit</code>的依赖。</p>
<h3 id="临时的解决办法如下："><a href="#临时的解决办法如下：" class="headerlink" title="临时的解决办法如下："></a>临时的解决办法如下：</h3><p>如果不想更新版本来解决问题，参考github中给出的issure的解决办法：<a href="https://github.com/bshall/librosa/commit/029dd47fd717073de877508db910155f0a384442">commit</a></p>
<p>1.打开 <code>&lt;envs&gt;/Lib/site-packages/librosa/util/decorator.py</code>文件，<br><code>&lt;envs&gt;</code>是librosa包所在环境的路径。<br>2. 将<code>decorator.py</code>的包导入修改为如下所示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># from numba.decorators import jit as optional_jit</span><br><span class="line">import numba</span><br><span class="line">if (numba.__version__ &lt; &#39;0.49.0&#39;):</span><br><span class="line">    from numba.decorators import jit as optional_jit</span><br><span class="line">else:</span><br><span class="line">    from numba.core.decorators import jit as optional_jit</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/chenryi/image_for_notes/raw/master/librosa-numba-fixed.png" alt="改正成功"></p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
